---
title: "Data science project plan"
subtitle: "Project submission"
author: "Student ID: "
toc: false
# # Uncomment the next line to use the default LaTeX template:
# format: pdf
execute: 
  cache: true
  eval: false
number-sections: false
bibliography: references.bib
---

```{r}
#| eval: false
#| echo: false
# Code to export d2/template.qmd to template.pdf
# Install tinytex, if not already installed:
system("quarto install tinytex")
# Render to PDF:
quarto::quarto_render(
  "d2/template.qmd",
  output_format = "pdf",
  output_file = "template.pdf"
)
list.files(pattern = "template.pdf", recursive = TRUE)
# Upload as a release
system("gh release list")
system("gh release upload 2025 docs/template.pdf --clobber")
```

# TRAN5340M Data Science Coversheet {-}

**Assignment title:**

**Student ID:**

**Word count:**

**Lecturer:**

**Submission Date:**

**Semester:**

**Academic Year:**

**Generative AI Category:**

Amber

Use of Generative Use of Generative Artificial Intelligence (Gen AI) in this assessment – mark one box as appropriate: 

- [ ] I have made no use of Gen AI
- [ ] I have used Gen AI only for the specific purposes outlined in my acknowledgements

By submitting the work to which this sheet is attached you confirm your compliance with the University’s definition of Academic Integrity as: “a commitment to good study practices and shared values which ensures that my work is a true expression of my own understanding and ideas, giving credit to others where their work contributes to mine”. Double-check that your referencing and use of quotations is consistent with this commitment.  

{{< pagebreak >}}

# Introduction

[Write your introduction here, explaining the context and importance of your chosen topic]

[
Using this template:

<!-- https://github.com/itsleeds/tds/blob/main/d2/template.qmd -->
See the source code for this template in the course GitHub repository at github.com/itsleeds/tds in folder/file [d2/template.qmd](https://github.com/itsleeds/tds/blob/main/d2/template.qmd).

Note: the code in that files contains steps to render the file to PDF and create a .zip file for submission.

See the [rendered PDF at github.com/itsleeds/tds/releases/download/2025/template.pdf](https://github.com/itsleeds/tds/releases/download/2025/template.pdf)

]

## Working title

**[Your project title here]**

# Data

[List and briefly describe the datasets you plan to use]

# Research question

**[State your main research question here]**

# Initial analysis

[Describe your planned analysis approach and include any preliminary data exploration]

```{r}
#| label: install-packages
#| include: false
pkgs = c("tidyverse", "stats19", "sf", "nptscot/osmactive")
# Install pak pkg if not already installed
if (!requireNamespace("pak", quietly = TRUE)) {
  install.packages("pak")
} 
pak::pkg_install(pkgs)
```

```{r}
#| include: false
#| label: setup
# Install required packages (update list as needed)
library(tidyverse)
library(stats19)
library(osmactive)
# Set ggplot2 theme
theme_set(theme_minimal())
```

```{r}
#| include: false
#| label: import-clean
collisions_2023 = stats19::get_stats19(year = 2023, type = "collision")
collisions_2023_sf = stats19::format_sf(collisions_2023)
names(collisions_2023_sf)
```

The following code was used to aggregate the data by hour:

```{r}
collisions_hourly = collisions_2023 |>
  mutate(time = lubridate::hour(datetime)) |>
  count(time, accident_severity) 
```

# Initial data exploration

A visualisation of the data is shown below:

```{r}
#| label: spatial-temporal-plot
#| layout-ncol: 2
#| echo: false
collisions_hourly |>
  ggplot(aes(x = time, y = n, fill = accident_severity)) +
  geom_col(position = "dodge") 
head(collisions_2023$police_force)
collisions_2023_sf |>
  filter(police_force == "Metropolitan Police") |>
  plot()
```

# Questions

[List any questions or challenges you anticipate]

# Reproducibility

Notes on how to reproduce this analysis are provided in the code chunks above. The full code is available in the `.qmd` file.

You could include details on how you created the submitted zip file, e.g.:

You can render your report to a PDF file with the following commands:

```{r}
#| eval: false
# Install tinytex, enabling quarto to render to PDF:
system("quarto install tinytex")

quarto::quarto_render(
  "submission.qmd",
  output_format = "pdf",
  output_file = "submission.pdf"
)
```

You can create a zip file with the files needed to reproduce this analysis with the following command:

```{r}
#| eval: false
zip(
  zipfile = "submission.zip",
  files = c("project-plan.qmd", "project-plan.pdf", "wy.gpkg")
)
```

{{< pagebreak >}}

# Acknowledgements

# References
