---
title: "Practical 1: Introduction to Transport Data Science"
bibliography: ../tds.bib
toc: true
execute: 
  cache: true
  warning: false
  message: false
---

## Agenda {.unnumbered}

1.  Lecture: an introduction to Transport Data Science (30 min)
    -   See the [slides](slides.html)
2.  Q&A (15 min) <!-- - Introduction to the module and team - 30 min
        Each person to say  1) their name and where they are based 2) why they took the module and 3) their level of knowledge of coding. -->
3.  Break and networking (15 min) <!-- 3. Practical (2 hrs) -->
4.  Data science and a good research question (30 min)
5.  Data science foundations (guided): Project set-up and using RStudio or VS Code as an integrated development environment (30 min)
6.  Focussed work (1 hr)
        <!-- 1. Bonus: Work through [Chapter 5](https://r4ds.had.co.nz/transform.html#filter-rows-with-filter) of R for Data Science -->

# What is transport data science and thinking of a good research question {.unnumbered}

-   Based on the contents of the lecture, come up with *your own* definition of data science
-   How do you see yourself using data science over the next 5 years?
-   Think of a question about a transport system you know well and how data science could help answer it, perhaps with reference to a sketch like that below

## How to come up with a good research question {.unnumbered}

-   Think about the data you have access to
-   Think about the problems you want to solve
-   Think about the methods you want to use and skills you want to learn
-   Think about how the final report will look and hold-together

#### How much potential is there for cycling across the transport network? {.unnumbered}

![](https://user-images.githubusercontent.com/1825120/127524923-7d9f5511-84a6-430b-8de9-a603a5524f39.png)

#### How can travel to schools be made safer? {.unnumbered}

#### How can hospitals encourage visitors to get there safely? {.unnumbered}

#### Where's the best place to build electric car charging points? {.unnumbered}

See [openstreetmap.org](https://www.openstreetmap.org/#map=19/53.80689/-1.55637) or search for other open access datasets for more ideas

<!-- 2. Work through the transport chapter of Geocomputation with R: https://geocompr.robinlovelace.net/transport.html -->

<!-- See https://github.com/ITSLeeds/TDS/blob/master/practicals/2-software.md -->

<!-- - In terms of future work in an evolving job market? -->

<!-- - In terms of the kinds of problems you want to solve? -->

<!-- ## Sketching research methods (in groups of 2-4, 30 minutes) -->

<!-- Starting with the 1000 'desire lines' dataset of Leeds, sketch-out some research ideas that cover -->

<!-- 1) Hypotheses: generate two hypotheses that are falsifiable and 2 hypotheses that are not falsifiable -->

<!-- 2) Input data: draw schematic representations of additional datasets that you could use alongside the desire lines dataset, with at least one at each of these levels: -->

<!-- - Zones -->

<!-- - Points -->

<!-- - Routes -->

<!-- - Route networks -->

<!-- - Individual -->

<!-- What temporal and spatial resolution could each one have? -->

<!-- 3) Methods: using a flow diagram (e.g. as shown below) -->

```{r schematic, echo=FALSE}
# knitr::include_graphics("https://raw.githubusercontent.com/npct/pct-team/master/flow-model/flow-diag2.png")
```

<!-- ## Practical, group computer task (30 minutes) -->

<!-- Create a github account (all). See: https://github.com -->

<!-- Building on the follow code chunk (but with no copy-and-pasting), create a data frame that contains the names, coffee habits and like/dislike of bus travel for everyone in your group (just 1 computer per group): -->

<!-- ```{r} -->

<!-- person_name = c( -->

<!--   "robin", -->

<!--   "malcolm", -->

<!--   "richard" -->

<!-- ) -->

<!-- n_coffee = c( -->

<!--   5, -->

<!--   1, -->

<!--   0 -->

<!-- ) -->

<!-- like_bus_travel = c( -->

<!--   TRUE, -->

<!--   FALSE, -->

<!--   TRUE -->

<!-- ) -->

<!-- personal_data = data.frame(person_name, n_coffee, like_bus_travel) -->

<!-- personal_data -->

<!-- ``` -->

<!-- When you are complete, add your code to https://github.com/ITSLeeds/TDS/blob/master/code-r/01-person-data.R -->

<!-- ## Learning outcomes -->

```{r, echo=FALSE}
# Identify available datasets and access and clean them
# Combine datasets from multiple sources
# Understand what machine learning is, which problems it is appropriate for compared with traditional statistical approaches, and how to implement machine learning techniques
# Visualise and communicate the results of transport data science, and know about setting-up interactive web applications
# Deciding when to use local computing power vs cloud services
```

<!-- - Articulate the relevance and limitations of data-centric analysis applied to transport problems, compared with other methods -->

# Data Science foundations

-   Review of [homework](../d1/)

-   Create a new folder (or R project with RStudio) called 'practical1'

-   In it create file called foundations.qmd

-   Type the following

```{html}

This is some text:

casualty_type = c("pedestrian", "cyclist", "cat")
casualty_age = seq(from = 20, to = 60, by = 20)
crashes = data.frame(casualty_type, casualty_age)
nrow(crashes)

```

-   Knit the document by pressing Ctrl+Shift+K in RStudio or VS Code, with the 'Knit' button in RStudio, or by typing `quarto render foundations.qmd` in the PowerShell or Terminal console, the result should look like this (see @fig-rstudio-foundations):

::: {#fig-rstudio-foundations}

![](images/rstudio-foundations.png)

Illustration of the RStudio interface with a .qmd file open in the top left, the console in the bottom left, the environment in the top right and the files in the bottom right.


:::

The document you are reading is a Quarto document, so we can show the output of the contents of the code in `foundations.qmd` here:

```{r}
casualty_type = c("pedestrian", "cyclist", "cat")
casualty_age = seq(from = 20, to = 60, by = 20)
crashes = data.frame(casualty_type, casualty_age)
nrow(crashes)
```

There are different ways to execute code.
When you run the code by 'compiling' the document, the objects are created in a different session.
For interactive data analysis, it is better to run the code in the console.

Make sure that you also execute the code in the console so that the objects are created in memory.
Do that by placing the cursor in the code chunk and pressing Ctrl+Enter (or Cmd+Enter on a Mac) or by copying and pasting the code into the console (not recommended).
We now have a data frame object stored in memory (technically in the global environment) that is used as the basis of the questions.

Next, add to the data frame you created by adding the following code to the code chunk in the .qmd file:

```{r}
vehicle_type = c("car", "bus", "tank")
crashes$vehicle_type = vehicle_type
```

What just happened?

We will explore this together, and then you can try the following data manipulation exercises:

## Data object manipulation basics

1.  Use the `$` operator to print the `vehicle_type` column of `crashes`.

<details>

In R the `$` symbol is used to refer to elemements of a list.
So the answer is simply:

```{r}
crashes$vehicle_type
```

</details>

2.  Subset the crashes with the `[,]` syntax

<details>

Try out different combinations on the dataframe `crashes` to see what happens.
For example, try:

```{r}
crashes[1,]
crashes[,1]
crashes[1,1]
```

3.  Subset the object with the `[[` syntax.

<details>

The `[[` operator is used to extract elements from a list.
Try:

```{r}
crashes[[1]]
crashes[[2]]
```

</details>

4.  **Bonus**: what is the `class()` of the objects created by each of the previous exercises?

-   Explore how many R classes you can find

5.  **Bonus** (advanced): reproduce the above with Python using the `pandas` or `polars` package

## Data science on real data

To get some larger datasets, try the following (from Chapter 8 of RSRR)

::: {.panel-tabset group="language"}
## R

```{r}
remotes::install_cran("stats19")
library(stats19)
ac = get_stats19(year = 2020, type = "collision")
ca = get_stats19(year = 2020, type = "cas")
ve = get_stats19(year = 2020, type = "veh")
# population hurt by road traffic collisions in 2020:
(nrow(ca) / 67e6) * 100
```

## Python

Challenge: reproduce the above code in Python using the `pystats19` package

``` python
# Install the package, e.g. with pip
!pip install pystats19
import pystats19
# See the documentation at https://github.com/Mayazure/py-stats19
```
:::

Let's go through these exercises together:

1.  Subset the `casualty_age` object using the inequality (`<`) so that only elements less than 50 are returned.
2.  Subset the `crashes` data frame so that only tanks are returned using the `==` operator.
3.  **Bonus**: assign the age of all tanks to 61.

-   Try running the subsetting code on a larger dataset, e.g. the `ac` object created previously

1.  Coerce the `vehicle_type` column of `crashes` to the class `character`.
2.  Coerce the `crashes` object into a matrix. What happened to the values?
3.  **Bonus:** What is the difference between the output of `summary()` on `character` and `factor` variables?

-   We'll explore this together

# Self-study practical (1 hr)

**Read and try to complete the exercises in Chapters 1 to 5 of the book [Reproducible Road Safety Research with R](https://itsleeds.github.io/rrsrr/).**

It assumes that you have recently updated R and RStudio on your computer.
For details on installing packages see [here](https://docs.ropensci.org/stats19/articles/stats19-training-setup.html).

```{=html}
<!-- ## Tidyverse

-   Work through Chapter 5 starting with the following code: -->
```

<!-- library(tidyverse) # Load the package -->

## Bonus: data science and transport

- Reproduce the code I wrote during this session, e.g. by copy-pasting this code: https://github.com/itsleeds/tds/blob/main/p1/p1project/foundations.qmd
  - See the raw file at https://github.com/itsleeds/tds/raw/refs/heads/main/p1/p1project/foundations.qmd
  - See the rendered result at https://itsleeds.github.io/tds/p1/p1project/foundations.html

- Work through [Chapter 13](https://r.geocompx.org/transport.html) of the book Geocomputation with R, taking care to ask questions about any aspects that you don't understand (your homework will be to complete and make notes on the chapter, including reproducible code).

# Homework

-   Work through Chapter 13 of the Geocomputation with R book. Make notes in a .qmd file that you can bring to the class to show colleagues and the instructor next week.

```{=html}
<!-- -   Work through chapters 6 and 7 on spatial and temporal data in the [RRSRR tutorial](https://itsleeds.github.io/rrsrr/) to get R foundations

-   Work-through the remaining exercises of the first sections in R4DS chapters 3 and 5

    -   Write your notes in a .R, .Rmd or .qmd file with comments, to show your working (and prove you've done it!)

-   **Bonus 1 (optional)** Run the code in the [demos/demo-quarto-document.qmd](https://github.com/ITSLeeds/TDS/blob/master/demos/demo-quarto-document.qmd) script

Note: you can copy-paste the code from the .qmd file into a new .qmd file on your computer and render it (convert it into a .PDF file) using the following: -->
```